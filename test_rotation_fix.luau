-- Test script to verify rotation system fixes
print("=== ROTATION SYSTEM FIX TEST ===")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Wait for player
local player = Players.LocalPlayer
if not player then
    print("‚ùå No LocalPlayer found - test only works in game")
    return
end

print("‚úÖ Player found:", player.Name)

-- Test 1: Check if PlacementManager is available
print("\nüîç TEST 1: Checking PlacementManager")

local SharedModule
local success, err = pcall(function()
    SharedModule = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("inits"))
end)

if not success or not SharedModule then
    print("‚ùå Failed to load SharedModule:", err)
    return
end

local PlacementManager = SharedModule.PlacementManagerClientInstance or SharedModule.PlacementManager
if not PlacementManager then
    print("‚ùå PlacementManager not found")
    return
end

print("‚úÖ PlacementManager loaded successfully")

-- Test 2: Verify rotation methods exist
print("\nüîç TEST 2: Checking rotation methods")

local methods = {
    "_DirectRotate",
    "_ApplyRotationToItem", 
    "_ShowRotationUI",
    "currentPlacementRotation"
}

for _, method in ipairs(methods) do
    if PlacementManager[method] ~= nil then
        print("‚úÖ", method, "exists")
    else
        print("‚ùå", method, "missing")
    end
end

-- Test 3: Create a test item to verify rotation works
print("\nüîç TEST 3: Creating test item for rotation verification")

if RunService:IsClient() then
    -- Create a test part
    local testPart = Instance.new("Part")
    testPart.Name = "RotationFixTestPart"
    testPart.Size = Vector3.new(6, 2, 3) -- Rectangular so rotation is visible
    testPart.Position = Vector3.new(10, 5, 0)
    testPart.BrickColor = BrickColor.new("Bright blue")
    testPart.Material = Enum.Material.Neon
    testPart.Anchored = true
    testPart.Parent = game.Workspace
    
    -- Add a decal to make rotation more obvious
    local decal = Instance.new("Decal")
    decal.Texture = "rbxasset://textures/face.png"
    decal.Face = Enum.NormalId.Front
    decal.Parent = testPart
    
    print("‚úÖ Created test part at position:", testPart.Position)
    
    -- Test the rotation function directly
    print("\nüîÑ TEST 4: Testing _ApplyRotationToItem function")
    
    if PlacementManager._ApplyRotationToItem then
        local testRotations = {0, 45, 90, 135, 180, 225, 270, 315, 360}
        
        local function testRotation(angle)
            task.wait(1)
            print("   Testing rotation:", angle, "degrees")
            PlacementManager:_ApplyRotationToItem(testPart, angle)
            
            -- Verify the rotation was applied
            local _, actualY, _ = testPart.CFrame:ToEulerAnglesXYZ()
            local actualDegrees = math.deg(actualY) % 360
            local expectedDegrees = angle % 360
            
            local tolerance = 1 -- 1 degree tolerance
            if math.abs(actualDegrees - expectedDegrees) < tolerance then
                print("   ‚úÖ Rotation applied correctly:", actualDegrees, "‚âà", expectedDegrees)
            else
                print("   ‚ùå Rotation incorrect. Expected:", expectedDegrees, "Got:", actualDegrees)
            end
        end
        
        -- Test rotations
        task.spawn(function()
            for _, angle in ipairs(testRotations) do
                testRotation(angle)
            end
            
            -- Clean up
            task.wait(2)
            testPart:Destroy()
            print("üßπ Test part cleaned up")
        end)
    else
        print("‚ùå _ApplyRotationToItem method not found")
    end
    
    -- Test 5: Verify controls UI shows correct keys
    print("\nüîç TEST 5: Testing PlacementControlsUI")
    
    if PlacementManager.placementControlsUI then
        print("‚úÖ PlacementControlsUI exists")
        -- The UI should now show Q/E instead of A/D
        print("üìã PlacementControlsUI should display 'Q&E' for rotation controls")
    else
        print("‚ùå PlacementControlsUI not found")
    end
    
else
    print("‚ö†Ô∏è  Test part creation skipped (not client)")
end

-- Test 6: Instructions for manual testing
print("\nüéÆ MANUAL TESTING INSTRUCTIONS:")
print("To test the fixed rotation system:")
print("")
print("1. üì¶ Place an item from inventory")
print("2. üîÑ Try these rotation controls during placement:")
print("   ‚Ä¢ Q: Rotate left 45¬∞")
print("   ‚Ä¢ E: Rotate right 45¬∞") 
print("   ‚Ä¢ Scroll wheel: Rotate 45¬∞ (up/down)")
print("   ‚Ä¢ Space: Open fine rotation UI")
print("3. ‚úÖ The preview item should visibly rotate")
print("4. üñ±Ô∏è  Left-click to place with rotation")
print("")
print("Fixed issues:")
print("‚úÖ Q/E keys don't conflict with player movement")
print("‚úÖ UpdatePlacementPreview uses currentPlacementRotation")
print("‚úÖ Visual rotation should now work properly")
print("‚úÖ Placed items should maintain their rotation")

print("\n‚úÖ ROTATION SYSTEM FIX TEST COMPLETED")
print("üéØ Key changes made:")
print("   ‚Ä¢ Changed A/D to Q/E for rotation")
print("   ‚Ä¢ Fixed UpdatePlacementPreview to use currentPlacementRotation")
print("   ‚Ä¢ Updated UI to show correct controls")
print("   ‚Ä¢ Maintained scroll wheel and gamepad support") 
-- Update Purchase Dialog Styling to Match Existing System
-- Run this script in Roblox Studio to update the AutoPurchaseDialogHandler with proper styling

local StarterPlayerScripts = game:GetService("StarterPlayer"):FindFirstChild("StarterPlayerScripts")

print("=== UPDATING PURCHASE DIALOG STYLING ===")

if not StarterPlayerScripts then
    print("âœ— StarterPlayerScripts not found!")
    return
end

-- Remove existing handler
local autoDialogScript = StarterPlayerScripts:FindFirstChild("AutoPurchaseDialogHandler")
if autoDialogScript then
    autoDialogScript:Destroy()
    print("  Removed existing AutoPurchaseDialogHandler")
end

-- Create new handler with proper styling
autoDialogScript = Instance.new("LocalScript")
autoDialogScript.Name = "AutoPurchaseDialogHandler"
autoDialogScript.Parent = StarterPlayerScripts

-- Updated script content with proper styling
autoDialogScript.Source = [[
-- AutoPurchaseDialogHandler - Handles automatic purchase dialogs with proper styling
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

print("AutoPurchaseDialogHandler: Starting with improved styling...")

-- Configuration
local PROXIMITY_DISTANCE = 10
local UPDATE_INTERVAL = 0.3
local lastUpdate = 0

-- State
local currentStoreItem = nil
local currentDialog = nil

-- Create purchase dialog with proper styling to match existing system
local function createPurchaseDialog(item)
    local itemName = item.Name:gsub("_", " ")
    local price = item:GetAttribute("Price") or item:GetAttribute("priceIngame") or 75
    local robuxPrice = item:GetAttribute("priceRobux") or 5
    local description = item:GetAttribute("Description") or ("A basic " .. itemName:lower() .. " building block.")
    
    -- Remove existing dialog
    if currentDialog then
        currentDialog:Destroy()
        currentDialog = nil
    end
    
    -- Create new dialog with exact styling match
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AutoPurchaseDialog"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui
    
    -- Background overlay (semi-transparent black)
    local overlay = Instance.new("Frame")
    overlay.Size = UDim2.new(1, 0, 1, 0)
    overlay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    overlay.BackgroundTransparency = 0.3  -- Less transparent to match
    overlay.BorderSizePixel = 0
    overlay.Parent = screenGui
    
    -- Main dialog container
    local dialogContainer = Instance.new("Frame")
    dialogContainer.Size = UDim2.new(0, 500, 0, 400)
    dialogContainer.Position = UDim2.new(0.5, -250, 0.5, -200)
    dialogContainer.BackgroundTransparency = 1
    dialogContainer.Parent = overlay
    
    -- Top dialog (item info)
    local topDialog = Instance.new("Frame")
    topDialog.Size = UDim2.new(1, 0, 0.65, 0)
    topDialog.Position = UDim2.new(0, 0, 0, 0)
    topDialog.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    topDialog.BorderSizePixel = 0
    topDialog.Parent = dialogContainer
    
    local topCorner = Instance.new("UICorner")
    topCorner.CornerRadius = UDim.new(0, 12)
    topCorner.Parent = topDialog
    
    -- Close button (X) - top right
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 36, 0, 36)
    closeButton.Position = UDim2.new(1, -46, 0, 10)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.Text = "âœ•"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextSize = 20
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = topDialog
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 8)
    closeCorner.Parent = closeButton
    
    -- Item title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -60, 0, 50)
    title.Position = UDim2.new(0, 20, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = itemName
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 28
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextYAlignment = Enum.TextYAlignment.Center
    title.Parent = topDialog
    
    -- Description
    local desc = Instance.new("TextLabel")
    desc.Size = UDim2.new(1, -40, 0, 60)
    desc.Position = UDim2.new(0, 20, 0, 70)
    desc.BackgroundTransparency = 1
    desc.Text = description
    desc.TextColor3 = Color3.fromRGB(200, 200, 200)
    desc.TextSize = 16
    desc.Font = Enum.Font.Gotham
    desc.TextWrapped = true
    desc.TextXAlignment = Enum.TextXAlignment.Left
    desc.TextYAlignment = Enum.TextYAlignment.Top
    desc.Parent = topDialog
    
    -- Price label (gold/yellow color)
    local priceLabel = Instance.new("TextLabel")
    priceLabel.Size = UDim2.new(1, -40, 0, 40)
    priceLabel.Position = UDim2.new(0, 20, 0, 150)
    priceLabel.BackgroundTransparency = 1
    priceLabel.Text = string.format("Price: ðŸ’°%d Coins or ðŸ’Ž%d Robux", price, robuxPrice)
    priceLabel.TextColor3 = Color3.fromRGB(255, 215, 0)  -- Gold color
    priceLabel.TextSize = 20
    priceLabel.Font = Enum.Font.GothamBold
    priceLabel.TextXAlignment = Enum.TextXAlignment.Left
    priceLabel.TextYAlignment = Enum.TextYAlignment.Center
    priceLabel.Parent = topDialog
    
    -- Purchase buttons container
    local buttonsContainer = Instance.new("Frame")
    buttonsContainer.Size = UDim2.new(1, -40, 0, 60)
    buttonsContainer.Position = UDim2.new(0, 20, 1, -80)
    buttonsContainer.BackgroundTransparency = 1
    buttonsContainer.Parent = topDialog
    
    -- Coins button (yellow, matching the design)
    local coinsButton = Instance.new("TextButton")
    coinsButton.Size = UDim2.new(0.48, 0, 1, 0)
    coinsButton.Position = UDim2.new(0, 0, 0, 0)
    coinsButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)  -- Bootstrap yellow
    coinsButton.Text = string.format("ðŸ’° Buy with %d Coins", price)
    coinsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    coinsButton.TextSize = 16
    coinsButton.Font = Enum.Font.GothamBold
    coinsButton.Parent = buttonsContainer
    
    local coinsCorner = Instance.new("UICorner")
    coinsCorner.CornerRadius = UDim.new(0, 8)
    coinsCorner.Parent = coinsButton
    
    -- Robux button (blue, matching the design)
    local robuxButton = Instance.new("TextButton")
    robuxButton.Size = UDim2.new(0.48, 0, 1, 0)
    robuxButton.Position = UDim2.new(0.52, 0, 0, 0)
    robuxButton.BackgroundColor3 = Color3.fromRGB(0, 123, 255)  -- Bootstrap blue
    robuxButton.Text = string.format("ðŸ’Ž Buy with %d Robux", robuxPrice)
    robuxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    robuxButton.TextSize = 16
    robuxButton.Font = Enum.Font.GothamBold
    robuxButton.Parent = buttonsContainer
    
    local robuxCorner = Instance.new("UICorner")
    robuxCorner.CornerRadius = UDim.new(0, 8)
    robuxCorner.Parent = robuxButton
    
    -- Bottom section (for additional item info if needed)
    local bottomDialog = Instance.new("Frame")
    bottomDialog.Size = UDim2.new(1, 0, 0.3, 0)
    bottomDialog.Position = UDim2.new(0, 0, 0.7, 0)
    bottomDialog.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    bottomDialog.BorderSizePixel = 0
    bottomDialog.Parent = dialogContainer
    
    local bottomCorner = Instance.new("UICorner")
    bottomCorner.CornerRadius = UDim.new(0, 12)
    bottomCorner.Parent = bottomDialog
    
    -- Additional item name in bottom section
    local bottomTitle = Instance.new("TextLabel")
    bottomTitle.Size = UDim2.new(1, -20, 0, 30)
    bottomTitle.Position = UDim2.new(0, 10, 0, 10)
    bottomTitle.BackgroundTransparency = 1
    bottomTitle.Text = item.Name  -- Show the actual item name
    bottomTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    bottomTitle.TextSize = 18
    bottomTitle.Font = Enum.Font.GothamBold
    bottomTitle.TextXAlignment = Enum.TextXAlignment.Left
    bottomTitle.Parent = bottomDialog
    
    local bottomDesc = Instance.new("TextLabel")
    bottomDesc.Size = UDim2.new(1, -20, 0, 60)
    bottomDesc.Position = UDim2.new(0, 10, 0, 40)
    bottomDesc.BackgroundTransparency = 1
    bottomDesc.Text = "A basic " .. itemName:lower() .. " building block."
    bottomDesc.TextColor3 = Color3.fromRGB(150, 150, 150)
    bottomDesc.TextSize = 14
    bottomDesc.Font = Enum.Font.Gotham
    bottomDesc.TextWrapped = true
    bottomDesc.TextXAlignment = Enum.TextXAlignment.Left
    bottomDesc.TextYAlignment = Enum.TextYAlignment.Top
    bottomDesc.Parent = bottomDialog
    
    -- Button handlers
    local function closePurchaseDialog()
        if currentDialog then
            local closeTween = TweenService:Create(screenGui, TweenInfo.new(0.2), {
                BackgroundTransparency = 1
            })
            closeTween:Play()
            closeTween.Completed:Connect(function()
                screenGui:Destroy()
            end)
        end
        currentDialog = nil
    end
    
    closeButton.MouseButton1Click:Connect(closePurchaseDialog)
    overlay.MouseButton1Click:Connect(closePurchaseDialog)
    
    coinsButton.MouseButton1Click:Connect(function()
        print("Attempting to purchase", item.Name, "with coins")
        local purchaseEvent = ReplicatedStorage:FindFirstChild("Remotes"):FindFirstChild("PurchaseItem")
        if purchaseEvent then
            purchaseEvent:FireServer(item.Name, 1, "INGAME")
        end
        closePurchaseDialog()
    end)
    
    robuxButton.MouseButton1Click:Connect(function()
        print("Attempting to purchase", item.Name, "with Robux")
        local purchaseEvent = ReplicatedStorage:FindFirstChild("Remotes"):FindFirstChild("PurchaseItem")
        if purchaseEvent then
            purchaseEvent:FireServer(item.Name, 1, "ROBUX")
        end
        closePurchaseDialog()
    end)
    
    -- Fade in animation
    screenGui.BackgroundTransparency = 1
    dialogContainer.Size = UDim2.new(0, 0, 0, 0)
    dialogContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    local fadeIn = TweenService:Create(screenGui, TweenInfo.new(0.2), {
        BackgroundTransparency = 0.3
    })
    local scaleIn = TweenService:Create(dialogContainer, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Size = UDim2.new(0, 500, 0, 400),
        Position = UDim2.new(0.5, -250, 0.5, -200)
    })
    
    fadeIn:Play()
    scaleIn:Play()
    
    currentDialog = screenGui
    print("AutoPurchaseDialogHandler: Showing styled purchase dialog for", item.Name)
end

-- Check for nearby purchasable items (any item with purchase attributes)
local function checkForPurchasableItems()
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    local playerPosition = humanoidRootPart.Position
    
    -- Find Workspace.Items
    local itemsFolder = workspace:FindFirstChild("Items")
    if not itemsFolder then return end
    
    -- Find closest purchasable item
    local closestItem = nil
    local closestDistance = PROXIMITY_DISTANCE
    
    local function scanForPurchasableItems(parent)
        for _, item in ipairs(parent:GetChildren()) do
            if item:IsA("Model") or item:IsA("Part") then
                -- Check for any purchasable attributes
                if item:GetAttribute("Purchasable") or item:GetAttribute("Price") or item:GetAttribute("priceIngame") then
                    local itemPosition = item:GetPivot().Position
                    local distance = (itemPosition - playerPosition).Magnitude
                    
                    if distance < closestDistance then
                        closestDistance = distance
                        closestItem = item
                    end
                end
            elseif item:IsA("Folder") then
                -- Recursively scan all subfolders for purchasable items
                scanForPurchasableItems(item)
            end
        end
    end
    
    scanForPurchasableItems(itemsFolder)
    
    -- Handle item changes
    if closestItem ~= currentStoreItem then
        if currentDialog then
            local fadeTween = TweenService:Create(currentDialog, TweenInfo.new(0.15), {
                BackgroundTransparency = 1
            })
            fadeTween:Play()
            fadeTween.Completed:Connect(function()
                if currentDialog then
                    currentDialog:Destroy()
                    currentDialog = nil
                end
            end)
        end
        
        currentStoreItem = closestItem
        
        if currentStoreItem then
            wait(0.1)  -- Small delay to prevent flickering
            createPurchaseDialog(currentStoreItem)
        end
    end
end

-- Main update loop
RunService.Heartbeat:Connect(function()
    local now = tick()
    if now - lastUpdate >= UPDATE_INTERVAL then
        lastUpdate = now
        checkForPurchasableItems()
    end
end)

print("AutoPurchaseDialogHandler: Ready with improved styling!")
]]

print("âœ“ Updated AutoPurchaseDialogHandler with proper styling")
print("âœ“ Now matches the existing purchase dialog design")
print("âœ“ Works for ALL purchasable items in any subfolder")
print("âœ“ Includes smooth animations and proper color scheme")

print("\n=== UPDATE COMPLETE ===")
print("The purchase dialogs will now:")
print("â€¢ Match the exact styling of existing dialogs")
print("â€¢ Work for any item with purchase attributes (not just glow items)")
print("â€¢ Support all subfolder structures")
print("â€¢ Include smooth fade animations")
print("â€¢ Use the same color scheme and layout as your existing system") 